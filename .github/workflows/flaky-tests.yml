name: Flaky Test Detection

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  pull_request:
    branches: [ main, master, develop ]

jobs:
  detect-flaky-tests:
    name: Run Tests Multiple Times
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        run: [1, 2, 3, 4, 5]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Node.js
      uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests (Attempt ${{ matrix.run }})
      run: npm test
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      continue-on-error: true

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      with:
        name: test-results-run-${{ matrix.run }}
        path: |
          coverage/
          junit.xml
        retention-days: 7

  analyze-results:
    name: Analyze Flaky Tests
    runs-on: ubuntu-latest
    needs: detect-flaky-tests
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Download all test results
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        path: test-results

    - name: Analyze for flaky tests
      run: |
        echo "## Flaky Test Analysis" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Ran tests 5 times to detect flaky tests." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Count successful runs
        SUCCESS_COUNT=0
        FAIL_COUNT=0
        
        for i in {1..5}; do
          if [ -d "test-results/test-results-run-$i" ]; then
            echo "✅ Run $i: Completed" >> $GITHUB_STEP_SUMMARY
            SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
          else
            echo "❌ Run $i: Failed or incomplete" >> $GITHUB_STEP_SUMMARY
            FAIL_COUNT=$((FAIL_COUNT + 1))
          fi
        done
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Summary:** $SUCCESS_COUNT successful, $FAIL_COUNT failed" >> $GITHUB_STEP_SUMMARY
        
        if [ $FAIL_COUNT -gt 0 ] && [ $SUCCESS_COUNT -gt 0 ]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **Potential flaky tests detected!**" >> $GITHUB_STEP_SUMMARY
          echo "Some test runs passed while others failed." >> $GITHUB_STEP_SUMMARY
        elif [ $SUCCESS_COUNT -eq 5 ]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **All test runs passed consistently!**" >> $GITHUB_STEP_SUMMARY
        fi

  quick-flaky-check:
    name: Quick Flaky Test Check (PR only)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Node.js
      uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests 3 times
      run: |
        echo "Running tests 3 times to check for flakiness..."
        
        for i in {1..3}; do
          echo "Test run $i of 3"
          npm test || exit 1
        done
        
        echo "✅ All 3 test runs passed!"
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
